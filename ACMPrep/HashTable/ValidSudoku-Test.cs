using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace ACMPrep
{
    public partial class HashTable
    {
        [TestMethod]
        public void HashTable_IsValidSudokuTest1()
        {
            char[,] board = {{'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'2', '2', '2', '2', '2', '2' , '2', '2', '2'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'}};
            Assert.IsFalse(IsValidSudoku(board));
        }

        [TestMethod]
        public void HashTable_IsValidSudokuTest2()
        {
            char[,] board = {{'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'.', '.', '.', '.', '.', '.' , '.', '.', '.'}};
            Assert.IsTrue(IsValidSudoku(board));
        }

        [TestMethod]
        public void HashTable_IsValidSudokuTest3()
        {
            char[,] board = {{'.', '8', '7', '6', '5', '4' , '3', '2', '1'},
                             {'2', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'3', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'4', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'5', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'6', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'7', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'8', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'9', '.', '.', '.', '.', '.' , '.', '.', '.'}};

            Assert.IsTrue(IsValidSudoku(board));
        }

        [TestMethod]
        public void HashTable_IsValidSudokuTest4()
        {
            char[,] board = {{'9', '8', '7', '6', '5', '4' , '3', '2', '1'},
                             {'2', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'3', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'4', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'5', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'6', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'7', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'8', '.', '.', '.', '.', '.' , '.', '.', '.'},
                             {'9', '.', '.', '.', '.', '.' , '.', '.', '.'}};

            Assert.IsFalse(IsValidSudoku(board));
        }
    };
}